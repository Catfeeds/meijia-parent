<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.user.UserRefSecMapper" >
  <resultMap id="BaseResultMap" type="com.simi.po.model.user.UserRefSec" >
    <id column="id" property="id" jdbcType="NUMERIC" />
    <result column="user_id" property="userId" jdbcType="NUMERIC" />
    <result column="sec_id" property="secId" jdbcType="NUMERIC" />
    <result column="add_time" property="addTime" jdbcType="NUMERIC" />
  </resultMap>
   <resultMap id="countBySeniorResultMap" type="java.util.HashMap">
		<result column="senior_id" property="seniorId" jdbcType="NUMERIC" />
		<result column="total_user" property="totalUser" jdbcType="NUMERIC" />
	</resultMap>
  <sql id="Base_Column_List" >
    id, user_id, sec_id, add_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_ref_sec
    where id = #{id,jdbcType=NUMERIC}
  </select>
  <select id="selectVoByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_ref_sec
    where user_id = #{userId,jdbcType=NUMERIC}
  </select>
  
  <select id="selectBySecId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_ref_sec
    where sec_id = #{secId,jdbcType=NUMERIC}
  </select>
  <!--通过userId查询出user_ref_sec  -->
  <select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_ref_sec
    where user_id = #{userId,jdbcType=NUMERIC}
  </select>
   <select id="statBySecId" resultMap="countBySeniorResultMap" >
	    SELECT * FROM
			(select T1.id as sec_id,
			(CASE WHEN T2.total_user is null THEN 0 ELSE T2.total_user END) as total_user FROM
		(
			SELECT id FROM users where user_type = 1) as T1
			left join
			(select
				sec_id, count(*) as total_user
				from user_ref_sec
				group by sec_id) as T2
			on T1.id = T2.sec_id
		) as T
		order by total_user asc
  	</select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_ref_sec
    where id = #{id,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="com.simi.po.model.user.UserRefSec" >
    insert into user_ref_sec (id, user_id, sec_id, 
      add_time)
    values (#{id,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC}, #{secId,jdbcType=NUMERIC}, 
      #{addTime,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.simi.po.model.user.UserRefSec" >
    insert into user_ref_sec
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="secId != null" >
        sec_id,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="secId != null" >
        #{secId,jdbcType=NUMERIC},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.user.UserRefSec" >
    update user_ref_sec
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=NUMERIC},
      </if>
      <if test="secId != null" >
        sec_id = #{secId,jdbcType=NUMERIC},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simi.po.model.user.UserRefSec" >
    update user_ref_sec
    set user_id = #{userId,jdbcType=NUMERIC},
      sec_id = #{secId,jdbcType=NUMERIC},
      add_time = #{addTime,jdbcType=NUMERIC}
    where id = #{id,jdbcType=NUMERIC}
  </update>
</mapper>