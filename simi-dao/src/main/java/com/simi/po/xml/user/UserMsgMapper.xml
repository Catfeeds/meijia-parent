<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.user.UserMsgMapper" >
  <resultMap id="BaseResultMap" type="com.simi.po.model.user.UserMsg" >
    <id column="id" property="id" jdbcType="NUMERIC" />
    <result column="msg_id" property="msgId" jdbcType="NUMERIC" />
    <result column="user_id" property="userId" jdbcType="NUMERIC" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="is_readed" property="isReaded" jdbcType="NUMERIC" />
    <result column="is_enable" property="isEnable" jdbcType="NUMERIC" />
    <result column="add_time" property="addTime" jdbcType="NUMERIC" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, msg_id, user_id, mobile, is_readed, is_enable, add_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from user_msg
    where id = #{id,jdbcType=NUMERIC}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user_msg
    order by add_time desc
  </select>
  <select id="selectByMobile"  resultMap="BaseResultMap"  parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from user_msg
    where mobile = #{mobile,jdbcType=CHAR} and msg_id= #{msgId,jdbcType=NUMERIC}
  </select>
  <select id="selectByUserId"  resultMap="BaseResultMap"  parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from user_msg
    where user_id = #{userId,jdbcType=CHAR} and msg_id= #{msgId,jdbcType=NUMERIC}
  </select>

    <select id="selectUserByMobile"  resultMap="BaseResultMap"  parameterType="java.util.HashMap" >
    select
    <include refid="Base_Column_List" />
    from user_msg
    where mobile = #{mobile,jdbcType=CHAR}
  </select>
	<!--根据msyId查询userMsg的list  -->
  <select id="selectByMsgId"  resultMap="BaseResultMap"  parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from user_msg
    where msg_id = #{msgId,jdbcType=CHAR}
  </select>
<select id="selectByListPage" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from user_msg
    where mobile = #{mobile,jdbcType=CHAR}
    order by add_time desc
  </select>
<select id="selectListByUserId" resultMap="BaseResultMap"   parameterType="java.lang.Long">
    select
    <include refid="Base_Column_List" />
    from user_msg
    where user_id = #{userId,jdbcType=NUMERIC}
    order by add_time desc
  </select>

	<!-- 根据手机号查询出用户有几条未读信息 -->
  <select id="countNewMsgByMobile"  resultType="java.lang.Long"  parameterType="java.lang.String" >
    select count(*)
    from user_msg
    where mobile = #{mobile,jdbcType=CHAR} and is_readed = 0
  </select>
  
	<!-- 根据用户Id查询出用户有几条未读信息 -->
  <select id="countNewMsgByUserId"  resultType="java.lang.Long"  parameterType="java.lang.String" >
    select count(*)
    from user_msg
    where user_id = #{userId,jdbcType=NUMERIC} and is_readed = 0
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_msg
    where id = #{id,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="com.simi.po.model.user.UserMsg" >
    insert into user_msg (id, msg_id, user_id,
      mobile, is_readed, is_enable,
      add_time)
    values (#{id,jdbcType=NUMERIC}, #{msgId,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC},
      #{mobile,jdbcType=CHAR}, #{isReaded,jdbcType=NUMERIC}, #{isEnable,jdbcType=NUMERIC},
      #{addTime,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.simi.po.model.user.UserMsg" >
    insert into user_msg
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="msgId != null" >
        msg_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="isReaded != null" >
        is_readed,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="msgId != null" >
        #{msgId,jdbcType=NUMERIC},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="isReaded != null" >
        #{isReaded,jdbcType=NUMERIC},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=NUMERIC},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.user.UserMsg" >
    update user_msg
    <set >
      <if test="msgId != null" >
        msg_id = #{msgId,jdbcType=NUMERIC},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="isReaded != null" >
        is_readed = #{isReaded,jdbcType=NUMERIC},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=NUMERIC},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=NUMERIC}
  </update>


    <!--设置消息为已读接口  -->
   <update id="updateBySelect" parameterType="com.simi.po.model.user.UserMsg" >
    update user_msg
    <set >
         is_readed=1
    </set>
    where mobile = #{mobile,jdbcType=CHAR} and msg_id =#{msgId jdbcType=NUMERIC}
  </update>


  <update id="updateByPrimaryKey" parameterType="com.simi.po.model.user.UserMsg" >
    update user_msg
    set msg_id = #{msgId,jdbcType=NUMERIC},
      user_id = #{userId,jdbcType=NUMERIC},
      mobile = #{mobile,jdbcType=CHAR},
      is_readed = #{isReaded,jdbcType=NUMERIC},
      is_enable = #{isEnable,jdbcType=NUMERIC},
      add_time = #{addTime,jdbcType=NUMERIC}
    where id = #{id,jdbcType=NUMERIC}
  </update>
</mapper>