<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.order.OrderPricesMapper">
	<resultMap id="BaseResultMap" type="com.simi.po.model.order.OrderPrices">
		<result column="order_id" property="orderId" jdbcType="NUMERIC" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="service_price_id" property="servicePriceId" jdbcType="NUMERIC" />
		<result column="partner_user_id" property="partnerUserId" jdbcType="NUMERIC" />
		<result column="user_id" property="userId" jdbcType="NUMERIC" />
		<result column="mobile" property="mobile" jdbcType="CHAR" />
		<result column="pay_type" property="payType" jdbcType="NUMERIC" />
		<result column="user_coupon_id" property="userCouponId" jdbcType="VARCHAR" />
		<result column="used_score" property="usedScore" jdbcType="NUMERIC" />
		<result column="order_money" property="orderMoney" jdbcType="DECIMAL" />
		<result column="order_pay" property="orderPay" jdbcType="DECIMAL" />
		<result column="order_pay_back" property="orderPayBack" jdbcType="DECIMAL" />
		<result column="order_pay_back_fee" property="orderPayBackFee" jdbcType="DECIMAL" />
		<result column="add_time" property="addTime" jdbcType="NUMERIC" />
		<result column="update_time" property="updateTime" jdbcType="NUMERIC" />
	</resultMap>
	<sql id="Base_Column_List">
		order_id, order_no, service_price_id, partner_user_id, user_id, mobile, pay_type,
		user_coupon_id, used_score, order_money, order_pay, order_pay_back, order_pay_back_fee,
		add_time, update_time
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from order_prices
		where order_id = #{orderId,jdbcType=NUMERIC}
	</select>

	<select id="selectByOrderIds" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from order_prices
		where order_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by add_time asc
	</select>

	<select id="selectByOrderNos" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from order_prices
		where order_no in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by add_time asc
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from
		order_prices
		where order_id = #{orderId,jdbcType=NUMERIC}
	</delete>
	
	<insert id="insert" parameterType="com.simi.po.model.order.OrderPrices">
		insert into order_prices (order_id, order_no, service_price_id, partner_user_id, user_id, mobile, pay_type,
		user_coupon_id, used_score, order_money, order_pay, order_pay_back, order_pay_back_fee,
		add_time, update_time)
		values
		#{orderId,jdbcType=NUMERIC}, #{orderNo,jdbcType=VARCHAR},
		#{servicePriceId,jdbcType=NUMERIC}, #{partnerUserId,jdbcType=NUMERIC},
		#{userId,jdbcType=NUMERIC},
		#{mobile,jdbcType=CHAR},
		#{payType,jdbcType=NUMERIC},
		#{userCouponId,jdbcType=NUMERIC},
		#{usedScore,jdbcType=NUMERIC},
		#{orderMoney,jdbcType=DECIMAL},
		#{orderPay,jdbcType=DECIMAL},
		#{orderPayBack,jdbcType=DECIMAL},
		#{orderPayBackFee,jdbcType=DECIMAL},
		#{addTime,jdbcType=NUMERIC},
		#{updateTime,jdbcType=NUMERIC})
	</insert>
	<insert id="insertSelective" parameterType="com.simi.po.model.order.OrderPrices">
		insert into order_prices
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				order_id,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="servicePriceId != null">
				service_price_id,
			</if>
			<if test="partnerUserId != null">
				partner_user_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="payType != null">
				pay_type,
			</if>
			<if test="userCouponId != null">
				user_coupon_id,
			</if>
			<if test="usedScore != null">
				used_score,
			</if>
			<if test="orderMoney != null">
				order_money,
			</if>
			<if test="orderPay != null">
				order_pay,
			</if>
			<if test="orderPayBack != null">
				order_pay_back,
			</if>
			<if test="orderPayBackFee != null">
				order_pay_back_fee,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				#{orderId,jdbcType=NUMERIC},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="servicePriceId != null">
				#{servicePriceId,jdbcType=NUMERIC},
			</if>
			<if test="partnerUserId != null">
				#{partnerUserId,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=CHAR},
			</if>
			<if test="payType != null">
				#{payType,jdbcType=NUMERIC},
			</if>
			<if test="userCouponId != null">
				#{"userCouponId != null",jdbcType=NUMERIC},
			</if>
			<if test="usedScore != null">
				#{usedScore,jdbcType=NUMERIC},
			</if>
			<if test="orderMoney != null">
				#{orderMoney,jdbcType=DECIMAL},
			</if>
			<if test="orderPay != null">
				#{orderPay,jdbcType=DECIMAL},
			</if>
			<if test="orderPayBack != null">
				#{orderPayBack,jdbcType=DECIMAL},
			</if>
			<if test="orderPayBackFee != null">
				#{orderPayBackFee,jdbcType=DECIMAL},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=NUMERIC},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.order.OrderPrices">
		update order_prices
		<set>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="servicePriceId != null">
				service_price_id = #{servicePriceId,jdbcType=NUMERIC},
			</if>
			<if test="partnerUserId != null">
				
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=CHAR},
			</if>
			<if test="payType != null">
				pay_type = #{payType,jdbcType=NUMERIC},
			</if>
			<if test="userCouponId != null">
				user_coupon_id = #{userCouponId,jdbcType=VARCHAR},
			</if>
			<if test="usedScore != null">
				used_score = #{usedScore,jdbcType=NUMERIC},
			</if>
			
			<if test="orderMoney != null">
				order_money = #{orderMoney,jdbcType=DECIMAL},
			</if>
			<if test="orderPay != null">
				order_pay = #{orderPay,jdbcType=DECIMAL},
			</if>
			<if test="orderPayBack != null">
				order_pay_back = #{orderPayBack,jdbcType=DECIMAL},
			</if>
			<if test="orderPayBackFee != null">
				order_pay_back_fee = #{orderPayBackFee,jdbcType=DECIMAL},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>
		</set>
		where order_id = #{orderId,jdbcType=NUMERIC}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.simi.po.model.order.OrderPrices">
		update
		order_prices
		set 
		order_no = #{orderNo,jdbcType=VARCHAR},
		service_price_id = #{servicePriceId,jdbcType=NUMERIC},
		partner_user_id = #{partnerUserId,jdbcType=NUMERIC},
		user_id = #{userId,jdbcType=NUMERIC},
		mobile = #{mobile,jdbcType=CHAR},
		pay_type = #{payType,jdbcType=NUMERIC},
		user_coupon_id = #{userCouponId,jdbcType=VARCHAR},
		used_score = #{usedScore,jdbcType=NUMERIC},
		order_money = #{orderMoney,jdbcType=DECIMAL},
		order_pay = #{orderPay,jdbcType=DECIMAL},
		order_pay_back = #{orderPayBack,jdbcType=DECIMAL},
		order_pay_back_fee = #{orderPayBackFee,jdbcType=DECIMAL},
		add_time = #{addTime,jdbcType=NUMERIC},
		update_time = #{updateTime,jdbcType=NUMERIC}
		where order_id = #{orderId,jdbcType=NUMERIC}
	</update>
</mapper>