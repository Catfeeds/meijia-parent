<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.order.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.simi.po.model.order.Orders">
		<id column="order_id" property="orderId" jdbcType="NUMERIC" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="partner_user_id" property="partnerUserId" jdbcType="NUMERIC" />
		<result column="user_id" property="userId" jdbcType="NUMERIC" />
		<result column="mobile" property="mobile" jdbcType="CHAR" />
		<result column="province_id" property="provinceId" jdbcType="NUMERIC" />
		<result column="city_id" property="cityId" jdbcType="NUMERIC" />
		<result column="region_id" property="regionId" jdbcType="NUMERIC" />	
		<result column="order_type" property="orderType" jdbcType="NUMERIC" />
		<result column="order_duration" property="orderDuration" jdbcType="NUMERIC" />
		<result column="service_type_id" property="serviceTypeId" jdbcType="NUMERIC" />
		<result column="service_content" property="serviceContent" jdbcType="VARCHAR" />
		<result column="service_date" property="serviceDate" jdbcType="NUMERIC" />
		<result column="addr_id" property="addrId" jdbcType="NUMERIC" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="order_from" property="orderFrom" jdbcType="NUMERIC" />
		<result column="order_status" property="orderStatus" jdbcType="NUMERIC" />
		<result column="order_rate" property="orderRate" jdbcType="NUMERIC" />
		<result column="order_rate_content" property="orderRateContent" jdbcType="VARCHAR" />
		<result column="is_score" property="isScore" jdbcType="NUMERIC" />
		<result column="add_time" property="addTime" jdbcType="NUMERIC" />
		<result column="update_time" property="updateTime" jdbcType="NUMERIC" />
	</resultMap>

	<sql id="Base_Column_List">
		order_id, order_no, partner_user_id, user_id, mobile, province_id, city_id, region_id, 
		order_type, order_duration, service_type_id, service_content, service_date, 
		addr_id, remarks, order_from, order_status, order_rate, order_rate_content, is_score,
		add_time, update_time
	</sql>
	
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from orders
		where order_id = #{order_id,jdbcType=NUMERIC}
	</select>

	<select id="selectByOrderNo" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from orders
		where order_no = #{orderNo,jdbcType=VARCHAR}
	</select>
	
	<select id="selectByUserId" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from orders
		where user_id = #{userId,jdbcType=NUMERIC}
	</select>
	
	<select id="selectByPartnerUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from orders
		where partner_user_id = #{partnerUserId,jdbcType=VARCHAR}
	</select>
	<!-- 超过一个小时未支付的订单 -->
	<select id="selectByOrderStatus" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from orders
		where  order_status = 1
	</select>
	<!-- 超过7天未评价的订单 -->
	<select id="selectByOrderStatus7Days" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from orders
		where  order_status = 7
	</select>
	<select id="selectByorder1Hour" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select 
        <include refid="Base_Column_List" />
		from orders
		where order_status = 1
	
		<![CDATA[and (add_time +3600)  > unix_timestamp(now())]]>   
	
		<![CDATA[and add_time < unix_timestamp(now()) ]]>   

	</select>
	
	<select id="selectIdsByListPage" parameterType="String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from orders where partner_user_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by add_time desc
	</select>
	
	<select id="selectByOrderIds" parameterType="java.lang.String" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from orders
		where order_id in
		<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by add_time asc
	</select>

	<!-- oa订单查询，并可以根据mobile和orderNo查询 -->

	<select id="selectByListPage" resultMap="BaseResultMap" parameterType="com.simi.vo.OrderSearchVo">
		select
		<include refid="Base_Column_List" />
		from orders
		where 1=1
		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>	
		
		<if test="mobile != null">
			and mobile like CONCAT('%','${mobile}','%' )
		</if>
		
		<if test="orderNo != null">
			and order_no like CONCAT('%','${orderNo}','%' )
		</if>
		
		<if test="partnerUserId != null">
			and partner_user_id = #{partnerUserId,jdbcType=NUMERIC}
		</if>	

		<if test="orderFrom != null">
			and order_from = #{orderFrom,jdbcType=NUMERIC}
		</if>
		
		<if test="orderStatus != null">
			and order_status = #{orderStatus,jdbcType=NUMERIC}
		</if>

		<if test="serviceTypeId != null">
			and service_type_id = #{serviceTypeId,jdbcType=NUMERIC}
		</if>
		
		<if test="notServiceTypeId != null">
			<![CDATA[ and service_type_id <> #{notServiceTypeId,jdbcType=NUMERIC} ]]>
		</if>
		
		order by add_time desc
	</select>
	
	<!-- 市场订单数求和 -->
	<select id="statTotalOrder" resultType="java.lang.Integer" parameterType="com.simi.vo.chart.ChartSearchVo">
		SELECT COUNT(*) AS total 
			   FROM orders
		WHERE 1=1
		<if test="startTime !=null">
			<![CDATA[ and add_time >= #{startTime}]]>
		</if>
		<if test="endTime !=null">
			<![CDATA[ and add_time <= #{endTime}]]>
		</if>
		<if test="status != null">
			and order_status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from orders
		where order_id = #{order_id,jdbcType=NUMERIC}
	</delete>
	
	<insert id="insert" parameterType="com.simi.po.model.order.Orders">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="orderId">
			SELECT LAST_INSERT_ID() AS order_id
		</selectKey>
		insert into orders (order_id, order_no, partner_user_id, user_id, mobile, province_id, city_id, region_id, 
		order_type, order_duration, service_type_id, service_content, service_date, 
		addr_id, remarks, order_from, order_status, order_rate, order_rate_content, is_score,
		add_time, update_time)
		values
		(#{orderId,jdbcType=NUMERIC},
		#{orderNo,jdbcType=VARCHAR},
		#{partnerUserId,jdbcType=NUMERIC},
		#{userId,jdbcType=NUMERIC},
		#{mobile,jdbcType=CHAR},
		#{provinceId,jdbcType=NUMERIC},
		#{cityId,jdbcType=NUMERIC},
		#{regionId,jdbcType=NUMERIC},
		#{orderType,jdbcType=NUMERIC},
		#{orderDuration,jdbcType=NUMERIC},
		#{serviceTypeId,jdbcType=NUMERIC},
		#{serviceContent,jdbcType=VARCHAR},
		#{serviceDate,jdbcType=NUMERIC},
		#{addrId,jdbcType=NUMERIC}, 
		#{remarks,jdbcType=VARCHAR},
		#{orderFrom,jdbcType=NUMERIC},
		#{orderStatus,jdbcType=NUMERIC},
		#{orderRate,jdbcType=NUMERIC},
		#{orderRateContent,jdbcType=VARCHAR},
		#{isScore,jdbcType=NUMERIC},
		#{addTime,jdbcType=NUMERIC},
		#{updateTime,jdbcType=NUMERIC})
	</insert>
	<insert id="insertSelective" parameterType="com.simi.po.model.order.Orders">
		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="orderId != null">
				order_id,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="partnerUserId != null">
				partner_user_id,
			</if>			
			<if test="userId != null">
				user_id,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="provinceId != null">
				province_id,
			</if>
			<if test="cityId != null">
				city_id,
			</if>
			<if test="regionId != null">
				region_id,
			</if>
			<if test="orderType != null">
				order_type,
			</if>
			<if test="orderDuration != null">
				order_duration,
			</if>
			<if test="serviceType_id != null">
				service_type_id,
			</if>
			<if test="serviceContent != null">
				service_content,
			</if>
			<if test="serviceDate != null">
				service_date,
			</if>
			<if test="addrId != null">
				addr_id,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="orderFrom != null">
				order_from,
			</if>
			<if test="orderStatus != null">
				order_status,
			</if>
			<if test="orderRate != null">
				order_rate,
			</if>
			<if test="orderRateContent != null">
				order_rate_content,
			</if>
			<if test="isScore != null">
				is_score,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">

			<if test="orderId != null">
				#{orderId,jdbcType=NUMERIC},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="partnerUserId != null">
				#{partnerUserId,jdbcType=NUMERIC},
			</if>			
			<if test="userId != null">
				#{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=CHAR},
			</if>
			<if test="provinceId != null">
				#{provinceId,jdbcType=NUMERIC},
			</if>
			<if test="cityId != null">
				#{cityId,jdbcType=NUMERIC},
			</if>
			<if test="regionId != null">
				#{regionId,jdbcType=NUMERIC},
			</if>
			<if test="orderType != null">
				#{orderPayType,jdbcType=NUMERIC},
			</if>
			<if test="orderDuration != null">
				#{orderDuration,jdbcType=NUMERIC},
			</if>
			<if test="serviceType_id != null">
				#{serviceTypeId,jdbcType=NUMERIC},
			</if>
			<if test="serviceContent != null">
				#{serviceContent,jdbcType=NUMERIC},
			</if>
			<if test="serviceDate != null">
				#{serviceDate,jdbcType=NUMERIC},
			</if>
			<if test="addrId != null">
				#{addrId,jdbcType=NUMERIC},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="orderFrom != null">
				#{orderFrom,jdbcType=NUMERIC},
			</if>
			<if test="orderStatus != null">
				#{orderStatus,jdbcType=NUMERIC},
			</if>
			<if test="orderRate != null">
				#{orderRate,jdbcType=NUMERIC},
			</if>
			<if test="orderRateContent != null">
				#{orderRateContent,jdbcType=VARCHAR},
			</if>
			<if test="isScore != null">
				#{isScore,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=NUMERIC},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.order.Orders">
		update orders
		<set>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="partnerUserId != null">
				partner_user_id = #{partnerUserId,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=CHAR},
			</if>
			<if test="provinceId != null">
				province_id = #{provinceId,jdbcType=NUMERIC},
			</if>
			<if test="cityId != null">
				city_id = #{cityId,jdbcType=NUMERIC},
			</if>
			<if test="regionId != null">
				region_id = #{regionId,jdbcType=NUMERIC},
			</if>
			<if test="orderType != null">
				order_type = #{orderType,jdbcType=NUMERIC},
			</if>
			<if test="orderDuration != null">
				order_duration= #{orderDuration,jdbcType=NUMERIC},
			</if>
			<if test="serviceTypeId != null">
				service_type_id = #{serviceTypeId,jdbcType=NUMERIC},
			</if>
			<if test="serviceContent != null">
				service_content = #{serviceContent,jdbcType=NUMERIC},
			</if>
			<if test="serviceDate != null">
				service_date = #{serviceDate,jdbcType=NUMERIC},
			</if>
			<if test="addrId != null">
				addr_id = #{addrId,jdbcType=NUMERIC},
			</if>
			<if test="remarks != null">
				remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="orderFrom != null">
				order_from = #{orderFrom,jdbcType=NUMERIC},
			</if>
			<if test="orderStatus != null">
				order_status = #{orderStatus,jdbcType=NUMERIC},
			</if>
			<if test="orderRate != null">
				order_rate = #{orderRate,jdbcType=NUMERIC},
			</if>
			<if test="orderRateContent != null">
				order_rate_content =
				#{orderRateContent,jdbcType=NUMERIC},
			</if>
			<if test="isScore != null">
				is_score = #{isScore,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>
		</set>
		where order_id = #{orderId,jdbcType=NUMERIC}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.simi.po.model.order.Orders">
		update orders
		set
		order_no = #{orderNo,jdbcType=VARCHAR},
		partner_user_id = #{partnerUserId,jdbcType=NUMERIC},
		user_id = #{userId,jdbcType=NUMERIC},
		mobile = #{mobile,jdbcType=CHAR},
		province_id = #{provinceId,jdbcType=NUMERIC},
		city_id = #{cityId,jdbcType=NUMERIC},
		region_id = #{regionId,jdbcType=NUMERIC},
		order_type = #{orderType,jdbcType=NUMERIC},
		service_type_id = #{serviceTypeId,jdbcType=NUMERIC},
		service_content = #{serviceContent,jdbcType=NUMERIC},
		service_date = #{serviceDate,jdbcType=NUMERIC},
		addr_id = #{addrId,jdbcType=NUMERIC},
		remarks = #{remarks,jdbcType=VARCHAR},
		order_from = #{orderFrom,jdbcType=NUMERIC},
		order_status = #{orderStatus,jdbcType=NUMERIC},
		order_rate = #{orderRate,jdbcType=NUMERIC},
		order_rate_content = #{orderRateContent,jdbcType=VARCHAR},
		is_score = #{isScore,jdbcType=NUMERIC},
		add_time = #{addTime,jdbcType=NUMERIC},
		update_time = #{updateTime,jdbcType=NUMERIC}
		where order_id = #{orderId,jdbcType=NUMERIC}
	</update>
</mapper>