<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.order.OrdersMapper">
	<resultMap id="BaseResultMap" type="com.simi.po.model.order.Orders">
		<id column="id" property="id" jdbcType="NUMERIC" />
		<result column="user_id" property="userId" jdbcType="NUMERIC" />
		<result column="mobile" property="mobile" jdbcType="CHAR" />
		<result column="city_id" property="cityId" jdbcType="NUMERIC" />
		<result column="order_no" property="orderNo" jdbcType="VARCHAR" />
		<result column="order_pay_type" property="orderPayType" jdbcType="NUMERIC" />
		<result column="service_type" property="serviceType" jdbcType="NUMERIC" />
		<result column="service_date" property="serviceDate" jdbcType="NUMERIC" />
		<result column="start_time" property="startTime" jdbcType="NUMERIC" />
		<result column="addr_id" property="addrId" jdbcType="NUMERIC" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="order_from" property="orderFrom" jdbcType="NUMERIC" />
		<result column="order_status" property="orderStatus" jdbcType="NUMERIC" />
		<result column="order_rate" property="orderRate" jdbcType="NUMERIC" />
		<result column="order_rate_content" property="orderRateContent" jdbcType="VARCHAR" />
		<result column="is_score" property="isScore" jdbcType="NUMERIC" />
		<result column="add_time" property="addTime" jdbcType="NUMERIC" />
		<result column="update_time" property="updateTime" jdbcType="NUMERIC" />
	</resultMap>

	<sql id="Base_Column_List">
		id, user_id, mobile, city_id, order_no, order_pay_type,
		service_type, service_date, start_time,
		addr_id, remarks, order_from,
		order_status, order_rate,
		order_rate_content, is_score,
		add_time,
		update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from orders
		where id = #{id,jdbcType=NUMERIC}
	</select>


	<select id="selectByStatus" resultMap="BaseResultMap"
		parameterType="java.lang.Short">
		select
		<include refid="Base_Column_List" />
		from orders
		where order_status = #{orderStatus,jdbcType=NUMERIC}
		order
		by add_time desc
	</select>
	<!-- 根据多个orderstate进行查询 -->
	<select id="selectByStatuses" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from orders
		where order_status in
		<foreach item="item" index="index" collection="list" open="("
			separator="," close=")">
			#{item}
		</foreach>
		order by add_time desc
	</select>

	<select id="selectByOrderNo" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from orders
		where order_no = #{orderNo,jdbcType=VARCHAR}
	</select>

	<!-- 查出所用下过单用户的手机号 -->
	<select id="selectByDistinctMobileLists" resultType="java.lang.String">
		select mobile
		from orders group by mobile
	</select>

	<!-- oa订单查询，并可以根据mobile和orderNo查询 -->
	<select id="selectByListPage" resultMap="BaseResultMap"
		parameterType="com.simi.vo.OrderSearchVo">
		select
		<include refid="Base_Column_List" />
		from orders
		where 1=1
		
		<if test="userId != null">
			and user_id = = #{userId,jdbcType=NUMERIC}
		</if>		
		
		<if test="mobile != null">
			and mobile like CONCAT('%','${mobile}','%' )
		</if>

		<if test="orderNo != null">
			and order_no like CONCAT('%','${orderNo}','%' )
		</if>
		
		<if test="orderFrom != null">
			and order_from = #{orderFrom,jdbcType=NUMERIC}
		</if>
		
		<if test="orderStatus != null">
			and order_status = #{orderStatus,jdbcType=NUMERIC}
		</if>

		<if test="serviceType != null">
			and service_type = #{serviceType,jdbcType=NUMERIC}
		</if>
		
		order by add_time desc
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from orders
		where id = #{id,jdbcType=NUMERIC}
	</delete>
	<insert id="insert" parameterType="com.simi.po.model.order.Orders">
		<selectKey resultType="java.lang.Long" order="AFTER"
			keyProperty="id">
			SELECT LAST_INSERT_ID() AS id
		</selectKey>
		insert into orders (id, user_id, mobile, city_id, order_no,
		order_pay_type, service_type,
		service_date, start_time, addr_id,
		remarks,
		order_from, order_status,
		order_rate, order_rate_content,
		is_score, add_time, update_time)
		values
		(#{id,jdbcType=NUMERIC},
		#{userId,jdbcType=NUMERIC},
		#{mobile,jdbcType=CHAR},
		#{cityId,jdbcType=NUMERIC},
		#{orderNo,jdbcType=VARCHAR},
		#{orderPayType,jdbcType=NUMERIC},
		#{serviceType,jdbcType=NUMERIC},
		#{serviceDate,jdbcType=NUMERIC},
		#{startTime,jdbcType=NUMERIC},
		#{addrId,jdbcType=NUMERIC}, #{remarks,jdbcType=VARCHAR},
		#{orderFrom,jdbcType=NUMERIC}, #{orderStatus,jdbcType=NUMERIC},
		#{orderRate,jdbcType=NUMERIC},
		#{orderRateContent,jdbcType=VARCHAR},
		#{isScore,jdbcType=NUMERIC},
		#{addTime,jdbcType=NUMERIC},
		#{updateTime,jdbcType=NUMERIC})
	</insert>
	<insert id="insertSelective" parameterType="com.simi.po.model.order.Orders">
		insert into orders
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="mobile != null">
				mobile,
			</if>

			<if test="cityId != null">
				city_id,
			</if>
			<if test="orderNo != null">
				order_no,
			</if>
			<if test="orderPayType != null">
				order_pay_type,
			</if>
			<if test="serviceType != null">
				service_type,
			</if>
			<if test="serviceDate != null">
				service_date,
			</if>
			<if test="startTime != null">
				start_time,
			</if>
			<if test="addrId != null">
				addr_id,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="orderFrom != null">
				order_from,
			</if>
			<if test="orderStatus != null">
				order_status,
			</if>
			<if test="orderRate != null">
				order_rate,
			</if>
			<if test="orderRateContent != null">
				order_rate_content,
			</if>
			<if test="isScore != null">
				is_score,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=CHAR},
			</if>
			<if test="cityId != null">
				#{cityId,jdbcType=NUMERIC},
			</if>
			<if test="orderNo != null">
				#{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="orderPayType != null">
				#{orderPayType,jdbcType=NUMERIC},
			</if>
			<if test="serviceType != null">
				#{serviceType,jdbcType=NUMERIC},
			</if>
			<if test="serviceDate != null">
				#{serviceDate,jdbcType=NUMERIC},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=NUMERIC},
			</if>
			<if test="addrId != null">
				#{addrId,jdbcType=NUMERIC},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="orderFrom != null">
				#{orderFrom,jdbcType=NUMERIC},
			</if>
			<if test="orderStatus != null">
				#{orderStatus,jdbcType=NUMERIC},
			</if>
			<if test="orderRate != null">
				#{orderRate,jdbcType=NUMERIC},
			</if>
			<if test="orderRateContent != null">
				#{orderRateContent,jdbcType=VARCHAR},
			</if>
			<if test="isScore != null">
				#{isScore,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=NUMERIC},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.order.Orders">
		update orders
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=NUMERIC},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=CHAR},
			</if>
			<if test="cityId != null">
				city_id = #{cityId,jdbcType=NUMERIC},
			</if>
			<if test="orderNo != null">
				order_no = #{orderNo,jdbcType=VARCHAR},
			</if>
			<if test="orderPayType != null">
				order_pay_type = #{orderPayType,jdbcType=NUMERIC},
			</if>
			<if test="serviceType != null">
				service_type = #{serviceType,jdbcType=NUMERIC},
			</if>
			<if test="serviceDate != null">
				service_date = #{serviceDate,jdbcType=NUMERIC},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=NUMERIC},
			</if>
			<if test="addrId != null">
				addr_id = #{addrId,jdbcType=NUMERIC},
			</if>
			<if test="remarks != null">
				remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="orderFrom != null">
				order_from = #{orderFrom,jdbcType=NUMERIC},
			</if>
			<if test="orderStatus != null">
				order_status = #{orderStatus,jdbcType=NUMERIC},
			</if>
			<if test="orderRate != null">
				order_rate = #{orderRate,jdbcType=NUMERIC},
			</if>
			<if test="orderRateContent != null">
				order_rate_content =
				#{orderRateContent,jdbcType=NUMERIC},
			</if>
			<if test="isScore != null">
				is_score = #{isScore,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>
		</set>
		where id = #{id,jdbcType=NUMERIC}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.simi.po.model.order.Orders">
		update orders
		set
		user_id = #{userId,jdbcType=NUMERIC},
		mobile = #{mobile,jdbcType=CHAR},
		city_id = #{cityId,jdbcType=NUMERIC},
		order_no = #{orderNo,jdbcType=VARCHAR},
		order_pay_type =
		#{orderPayType,jdbcType=NUMERIC},
		service_type =
		#{serviceType,jdbcType=NUMERIC},
		service_date =
		#{serviceDate,jdbcType=NUMERIC},
		start_time =
		#{startTime,jdbcType=NUMERIC},
		addr_id = #{addrId,jdbcType=NUMERIC},
		remarks =
		#{remarks,jdbcType=VARCHAR},
		order_from =
		#{orderFrom,jdbcType=NUMERIC},
		order_status =
		#{orderStatus,jdbcType=NUMERIC},
		order_rate =
		#{orderRate,jdbcType=NUMERIC},
		order_rate_content =
		#{orderRateContent,jdbcType=VARCHAR},
		is_score =
		#{isScore,jdbcType=NUMERIC},
		add_time = #{addTime,jdbcType=NUMERIC},
		update_time = #{updateTime,jdbcType=NUMERIC}
		where id =
		#{id,jdbcType=NUMERIC}
	</update>
</mapper>