<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.order.OrderSeniorMapper" >
  <resultMap id="BaseResultMap" type="com.simi.po.model.order.OrderSenior" >
    <id column="id" property="id" jdbcType="NUMERIC" />
    <result column="user_id" property="userId" jdbcType="NUMERIC" />
    <result column="sec_id" property="secId" jdbcType="NUMERIC" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="senior_order_no" property="seniorOrderNo" jdbcType="VARCHAR" />
    <result column="senior_type_id" property="seniorTypeId" jdbcType="NUMERIC" />
    <result column="order_money" property="orderMoney" jdbcType="DECIMAL" />
    <result column="order_pay" property="orderPay" jdbcType="DECIMAL" />
    <result column="valid_day" property="validDay" jdbcType="SMALLINT" />
    <result column="start_date" property="startDate" jdbcType="DATE" />
    <result column="end_date" property="endDate" jdbcType="DATE" />
    <result column="pay_type" property="payType" jdbcType="NUMERIC" />
    <result column="order_status" property="orderStatus" jdbcType="NUMERIC" />
    <result column="add_time" property="addTime" jdbcType="NUMERIC" />
    <result column="update_time" property="updateTime" jdbcType="NUMERIC" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, sec_id, mobile, senior_order_no, senior_type_id, order_money, order_pay,
    valid_day, start_date, end_date, pay_type, order_status,
    add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from order_senior
    where id = #{id,jdbcType=NUMERIC}
  </select>

  <select id="selectByMobileAndPay" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from order_senior
    where mobile = #{mobile,jdbcType=NUMERIC} and order_status = 1
    order by add_time desc;
  </select>
  
  <select id="selectByUserIdAndPay" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from order_senior
    where user_id = #{userId,jdbcType=NUMERIC} and order_status = 1
    order by add_time desc;
  </select>

  <select id="selectByOrderSeniorNo" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from order_senior
    where senior_order_no = #{senior_order_no,jdbcType=VARCHAR}
  </select>


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order_senior
    where id = #{id,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="com.simi.po.model.order.OrderSenior" >
	<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
	SELECT LAST_INSERT_ID() AS id
	</selectKey>
    insert into order_senior (id, user_id, sec_id, mobile,
      senior_order_no, senior_type_id, order_money, order_pay,
      valid_day, start_date, end_date,
      pay_type, order_status, add_time,
      update_time)
    values (#{id,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC}, #{secId,jdbcType=NUMERIC},
      #{mobile,jdbcType=CHAR},
      #{seniorOrderNo,jdbcType=VARCHAR}, #{seniorTypeId,jdbcType=NUMERIC}, 
      #{orderMoney,jdbcType=DECIMAL}, #{orderPay,jdbcType=DECIMAL},
      #{validDay,jdbcType=SMALLINT},  #{startDate,jdbcType=DATE},
      #{endDate,jdbcType=DATE}, #{payType,jdbcType=NUMERIC},
      #{orderStatus,jdbcType=NUMERIC}, #{addTime,jdbcType=NUMERIC},
      #{updateTime,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.simi.po.model.order.OrderSenior" >
    insert into order_senior
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="secId != null" >
        sec_id,
      </if>      
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="seniorOrderNo != null" >
        senior_order_no,
      </if>
      <if test="seniorTypeId != null" >
        senior_type_id,
      </if>
      <if test="orderMoney != null" >
        order_money,
      </if>
      <if test="orderPay != null" >
        order_pay,
      </if>
      <if test="validDay != null" >
        valid_day,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="payType != null" >
        pay_type,
      </if>
      <if test="payType != null" >
        #{payType,jdbcType=NUMERIC},
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="secId != null" >
        #{secId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="seniorOrderNo != null" >
        #{seniorOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="seniorTypeId != null" >
        #{seniorTypeId,jdbcType=NUMERIC},
      </if>
      <if test="orderMoney != null" >
        #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="orderPay != null" >
        #{orderPay,jdbcType=DECIMAL},
      </if>
      <if test="validDay != null" >
        #{validDay,jdbcType=SMALLINT},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=DATE},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=NUMERIC},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=NUMERIC},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=NUMERIC},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.order.OrderSenior" >
    update order_senior
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=NUMERIC},
      </if>
      <if test="secId != null" >
        sec_id = #{secId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="seniorOrderNo != null" >
        senior_order_no = #{seniorOrderNo,jdbcType=VARCHAR},
      </if>
      <if test="seniorTypeId != null" >
        senior_type_id = #{seniorTypeId,jdbcType=NUMERIC},
      </if>
      <if test="orderMoney != null" >
        order_money = #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="orderPay != null" >
        order_pay = #{orderPay,jdbcType=DECIMAL},
      </if>
      <if test="validDay != null" >
        valid_day = #{validDay,jdbcType=SMALLINT},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=DATE},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=DATE},
      </if>
      <if test="payType != null" >
        pay_type = #{payType,jdbcType=NUMERIC},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=NUMERIC},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=NUMERIC},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simi.po.model.order.OrderSenior" >
    update order_senior
    set user_id = #{userId,jdbcType=NUMERIC},
      sec_id = #{secId,jdbcType=NUMERIC},
      mobile = #{mobile,jdbcType=CHAR},
      senior_order_no = #{seniorOrderNo,jdbcType=VARCHAR},
      senior_type_id = #{seniorTypeId,jdbcType=NUMERIC},
      order_money = #{orderMoney,jdbcType=DECIMAL},
      order_pay = #{orderPay,jdbcType=DECIMAL},
      valid_day = #{validDay,jdbcType=SMALLINT},
      start_date = #{startDate,jdbcType=DATE},
      end_date = #{endDate,jdbcType=DATE},
      pay_type = #{payType,jdbcType=NUMERIC},
      order_status = #{orderStatus,jdbcType=NUMERIC},
      add_time = #{addTime,jdbcType=NUMERIC},
      update_time = #{updateTime,jdbcType=NUMERIC}
    where id = #{id,jdbcType=NUMERIC}
  </update>
</mapper>