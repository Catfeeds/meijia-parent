<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.order.OrderRefJyfMapper" >
  <resultMap id="BaseResultMap" type="com.simi.po.model.order.OrderRefJyf" >
    <id column="id" property="id" jdbcType="NUMERIC" />
    <result column="user_id" property="userId" jdbcType="NUMERIC" />
    <result column="mobile" property="mobile" jdbcType="CHAR" />
    <result column="city_id" property="cityId" jdbcType="NUMERIC" />
    <result column="order_id" property="orderId" jdbcType="NUMERIC" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="contract_no" property="contractNo" jdbcType="VARCHAR" />
    <result column="dispatch_id" property="dispatchId" jdbcType="NUMERIC" />
    <result column="employee_id" property="employeeId" jdbcType="NUMERIC" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="add_time" property="addTime" jdbcType="NUMERIC" />
    <result column="update_time" property="updateTime" jdbcType="NUMERIC" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, user_id, mobile, city_id, order_id, order_no, contract_no, dispatch_id, employee_id,
    employee_name, add_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from order_ref_jyf
    where id = #{id,jdbcType=NUMERIC}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from order_ref_jyf
    where id = #{id,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="com.simi.po.model.order.OrderRefJyf" >
    insert into order_ref_jyf (id, user_id, mobile,
      city_id, order_id, order_no,
      contract_no, dispatch_id, employee_id,
      employee_name, add_time, update_time
      )
    values (#{id,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC}, #{mobile,jdbcType=CHAR},
      #{cityId,jdbcType=NUMERIC}, #{orderId,jdbcType=NUMERIC}, #{orderNo,jdbcType=VARCHAR},
      #{contractNo,jdbcType=VARCHAR}, #{dispatchId,jdbcType=NUMERIC}, #{employeeId,jdbcType=NUMERIC},
      #{employeeName,jdbcType=VARCHAR}, #{addTime,jdbcType=NUMERIC}, #{updateTime,jdbcType=NUMERIC}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.simi.po.model.order.OrderRefJyf" >
    insert into order_ref_jyf
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="mobile != null" >
        mobile,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="contractNo != null" >
        contract_no,
      </if>
      <if test="dispatchId != null" >
        dispatch_id,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="addTime != null" >
        add_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=NUMERIC},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=NUMERIC},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null" >
        #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="dispatchId != null" >
        #{dispatchId,jdbcType=NUMERIC},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=NUMERIC},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        #{addTime,jdbcType=NUMERIC},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.order.OrderRefJyf" >
    update order_ref_jyf
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null" >
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=NUMERIC},
      </if>
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=NUMERIC},
      </if>
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="contractNo != null" >
        contract_no = #{contractNo,jdbcType=VARCHAR},
      </if>
      <if test="dispatchId != null" >
        dispatch_id = #{dispatchId,jdbcType=NUMERIC},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=NUMERIC},
      </if>
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null" >
        add_time = #{addTime,jdbcType=NUMERIC},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simi.po.model.order.OrderRefJyf" >
    update order_ref_jyf
    set user_id = #{userId,jdbcType=NUMERIC},
      mobile = #{mobile,jdbcType=CHAR},
      city_id = #{cityId,jdbcType=NUMERIC},
      order_id = #{orderId,jdbcType=NUMERIC},
      order_no = #{orderNo,jdbcType=VARCHAR},
      contract_no = #{contractNo,jdbcType=VARCHAR},
      dispatch_id = #{dispatchId,jdbcType=NUMERIC},
      employee_id = #{employeeId,jdbcType=NUMERIC},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=NUMERIC},
      update_time = #{updateTime,jdbcType=NUMERIC}
    where id = #{id,jdbcType=NUMERIC}
  </update>
</mapper>