<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.user.UserFriendsMapper">
	<resultMap id="BaseResultMap" type="com.simi.po.model.user.UserFriends">
		<id column="id" property="id" jdbcType="NUMERIC" />
		<result column="user_id" property="userId" jdbcType="NUMERIC" />
		<result column="friend_id" property="friendId" jdbcType="NUMERIC" />
		<result column="add_time" property="addTime" jdbcType="INTEGER" />
		<result column="update_time" property="updateTime" jdbcType="NUMERIC" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, friend_id, add_time, update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user_friends
		where id = #{id,jdbcType=NUMERIC}
	</select>

	<select id="selectByListPage" resultMap="BaseResultMap" parameterType="com.simi.vo.UserFriendSearchVo">
		select
		<include refid="Base_Column_List" />
		from user_friends
		where 1=1
		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>
		order by add_time desc
	</select>
	
	<select id="selectByUserId" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user_friends
		where user_id = #{userId,jdbcType=NUMERIC}
		order by add_time desc
	</select>	

	<select id="selectByIsFirend" resultMap="BaseResultMap" parameterType="com.simi.vo.UserFriendSearchVo">
		select
		<include refid="Base_Column_List" />
		from user_friends
		where 1=1
		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>
		<if test="friendId != null">
			and friend_id = #{friendId,jdbcType=NUMERIC}
		</if>
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_friends
		where id = #{id,jdbcType=NUMERIC}
	</delete>
	<insert id="insert" parameterType="com.simi.po.model.user.UserFriends">
		insert into user_friends (id, user_id, friend_id,
		add_time, update_time)
		values (#{id,jdbcType=NUMERIC},
		#{userId,jdbcType=NUMERIC}, #{friendId,jdbcType=NUMERIC},
		#{addTime,jdbcType=INTEGER}, #{updateTime,jdbcType=NUMERIC})
	</insert>
	<insert id="insertSelective" parameterType="com.simi.po.model.user.UserFriends">
		insert into user_friends
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="friendId != null">
				friend_id,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=NUMERIC},
			</if>
			<if test="friendId != null">
				#{friendId,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=NUMERIC},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.user.UserFriends">
		update user_friends
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=NUMERIC},
			</if>
			<if test="friendId != null">
				friend_id = #{friendId,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=INTEGER},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>
		</set>
		where id = #{id,jdbcType=NUMERIC}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.simi.po.model.user.UserFriends">
		update user_friends
		set user_id = #{userId,jdbcType=NUMERIC},
		friend_id = #{friendId,jdbcType=NUMERIC},
		add_time = #{addTime,jdbcType=INTEGER},
		update_time = #{updateTime,jdbcType=NUMERIC}
		where id = #{id,jdbcType=NUMERIC}
	</update>
</mapper>