<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simi.po.dao.user.UserLeaveMapper">
	<resultMap id="BaseResultMap" type="com.simi.po.model.user.UserLeave">
		<id column="leave_id" property="leaveId" jdbcType="NUMERIC" />
		<result column="company_id" property="companyId" jdbcType="NUMERIC" />
		<result column="user_id" property="userId" jdbcType="NUMERIC" />
		<result column="leave_type" property="leaveType" jdbcType="NUMERIC" />
		<result column="start_date" property="startDate" jdbcType="DATE" />
		<result column="end_date" property="endDate" jdbcType="DATE" />
		<result column="total_days" property="totalDays" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="imgs" property="imgs" jdbcType="VARCHAR" />
		<result column="status" property="status" jdbcType="NUMERIC" />
		<result column="add_time" property="addTime" jdbcType="NUMERIC" />
		<result column="update_time" property="updateTime" jdbcType="NUMERIC" />
	</resultMap>
	<sql id="Base_Column_List">
		leave_id, company_id, user_id, leave_type, start_date, end_date, total_days, remarks, imgs,
		status, add_time, update_time
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
		select
		<include refid="Base_Column_List" />
		from user_leave
		where leave_id = #{leaveId,jdbcType=NUMERIC}
	</select>

	<select id="selectByListPage" resultMap="BaseResultMap" parameterType="com.simi.vo.user.UserLeaveSearchVo">
		select
		<include refid="Base_Column_List" />
		from user_leave
		where 1=1
		<if test="companyId != null">
			and company_id = #{companyId,jdbcType=NUMERIC}
		</if>

		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>
		
		<if test="mobile != null">
			and user_id in (select id from users where mobile like CONCAT('%','${mobile}','%' ) )
		</if>
		
		<if test="passUserId != null">
			and leave_id in (select leave_id from user_leave_pass where pass_user_id = #{passUserId,jdbcType=NUMERIC})
		</if>

		<if test="status != null">
			and status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		
		<if test="startDate != null and endDate != null">
			and (
			 (start_date BETWEEN #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE}) or 
			 (end_date BETWEEN #{startDate,jdbcType=DATE} and #{endDate,jdbcType=DATE})
			)
		</if>
		
		<if test="startTime != null">
			<![CDATA[ and add_time >= #{startTime,jdbcType=NUMERIC} ]]>
		</if>

		<if test="endTime != null">
			<![CDATA[ and add_time <= #{endTime,jdbcType=NUMERIC} ]]>
		</if>

		order by update_time desc
	</select>

	<select id="selectBySearchVo" resultMap="BaseResultMap" parameterType="com.simi.vo.user.UserLeaveSearchVo">
		select
		<include refid="Base_Column_List" />
		from user_leave
		where 1=1
		<if test="companyId != null">
			and company_id = #{companyId,jdbcType=NUMERIC}
		</if>

		<if test="userId != null">
			and user_id = #{userId,jdbcType=NUMERIC}
		</if>
		
		<if test="mobile != null">
			and user_id in (select id from users where mobile like CONCAT('%','${mobile}','%' ) )
		</if>

		<if test="startDate != null">
			<![CDATA[ and (  ( start_date >= #{startDate,jdbcType=NUMERIC} and end_date <= #{startDate,jdbcType=NUMERIC} ) OR
							 ( start_date >= #{endDate,jdbcType=NUMERIC} and end_date <= #{endDate,jdbcType=NUMERIC} )
						  )
			 ]]>
		</if>

		<if test="status != null">
			and status in
			<foreach item="item" index="index" collection="status" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>

		order by leave_id desc
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
		delete from user_leave
		where leave_id = #{leaveId,jdbcType=NUMERIC}
	</delete>
	<insert id="insert" parameterType="com.simi.po.model.user.UserLeave">
		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="leaveId">
			SELECT LAST_INSERT_ID() AS leave_id
		</selectKey>

		insert into user_leave (leave_id, company_id, user_id,
		leave_type, start_date, end_date,
		total_days, remarks, imgs, status,
		add_time, update_time)
		values
		(#{leaveId,jdbcType=NUMERIC}, #{companyId,jdbcType=NUMERIC}, #{userId,jdbcType=NUMERIC},
		#{leaveType,jdbcType=NUMERIC}, #{startDate,jdbcType=DATE},
		#{endDate,jdbcType=DATE},
		#{totalDays,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR},
		#{imgs,jdbcType=VARCHAR}, #{status,jdbcType=NUMERIC},
		#{addTime,jdbcType=NUMERIC}, #{updateTime,jdbcType=NUMERIC})
	</insert>
	<insert id="insertSelective" parameterType="com.simi.po.model.user.UserLeave">

		<selectKey resultType="java.lang.Long" order="AFTER" keyProperty="leaveId">
			SELECT LAST_INSERT_ID() AS leave_id
		</selectKey>

		insert into user_leave
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="leaveId != null">
				leave_id,
			</if>
			<if test="companyId != null">
				company_id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="leaveType != null">
				leave_type,
			</if>
			<if test="startDate != null">
				start_date,
			</if>
			<if test="endDate != null">
				end_date,
			</if>
			<if test="totalDays != null">
				total_days,
			</if>
			<if test="remarks != null">
				remarks,
			</if>
			<if test="imgs != null">
				imgs,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="addTime != null">
				add_time,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="leaveId != null">
				#{leaveId,jdbcType=NUMERIC},
			</if>
			<if test="companyId != null">
				#{companyId,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=NUMERIC},
			</if>
			<if test="leaveType != null">
				#{leaveType,jdbcType=NUMERIC},
			</if>
			<if test="startDate != null">
				#{startDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				#{endDate,jdbcType=DATE},
			</if>
			<if test="totalDays != null">
				#{totalDays,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				#{remarks,jdbcType=VARCHAR},
			</if>
			<if test="imgs != null">
				#{imgs,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				#{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=NUMERIC},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.user.UserLeave">
		update user_leave
		<set>
			<if test="companyId != null">
				company_id = #{companyId,jdbcType=NUMERIC},
			</if>
			<if test="userId != null">
				user_id = #{userId,jdbcType=NUMERIC},
			</if>
			<if test="leaveType != null">
				leave_type = #{leaveType,jdbcType=NUMERIC},
			</if>
			<if test="startDate != null">
				start_date = #{startDate,jdbcType=DATE},
			</if>
			<if test="endDate != null">
				end_date = #{endDate,jdbcType=DATE},
			</if>
			<if test="totalDays != null">
				total_days = #{totalDays,jdbcType=VARCHAR},
			</if>
			<if test="remarks != null">
				remarks = #{remarks,jdbcType=VARCHAR},
			</if>
			<if test="imgs != null">
				imgs = #{imgs,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=NUMERIC},
			</if>
			<if test="addTime != null">
				add_time = #{addTime,jdbcType=NUMERIC},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=NUMERIC},
			</if>
		</set>
		where leave_id = #{leaveId,jdbcType=NUMERIC}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.simi.po.model.user.UserLeave">
		update user_leave
		set company_id = #{companyId,jdbcType=NUMERIC},
		user_id = #{userId,jdbcType=NUMERIC},
		leave_type = #{leaveType,jdbcType=NUMERIC},
		start_date = #{startDate,jdbcType=DATE},
		end_date = #{endDate,jdbcType=DATE},
		total_days =
		#{totalDays,jdbcType=VARCHAR},
		remarks = #{remarks,jdbcType=VARCHAR},
		imgs = #{imgs,jdbcType=VARCHAR},
		status = #{status,jdbcType=NUMERIC},
		add_time =
		#{addTime,jdbcType=NUMERIC},
		update_time = #{updateTime,jdbcType=NUMERIC}
		where leave_id = #{leaveId,jdbcType=NUMERIC}
	</update>
</mapper>