<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.simi.po.dao.order.OrderLogMapper">
  <resultMap id="BaseResultMap" type="com.simi.po.model.order.OrderLog">
    <id column="id" jdbcType="NUMERIC" property="id" />
    <result column="mobile" jdbcType="CHAR" property="mobile" />
    <result column="order_id" jdbcType="NUMERIC" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_status" jdbcType="NUMERIC" property="orderStatus" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="add_time" jdbcType="NUMERIC" property="addTime" />
  </resultMap>
  <sql id="Base_Column_List">
    id, mobile, order_id, order_no, order_status, remarks, add_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_log
    where id = #{id,jdbcType=NUMERIC}
  </select>

  <select id="selectByOrderNo" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from order_log
    where order_no = #{order_no,jdbcType=NUMERIC}
    order by add_time desc
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order_log
    where id = #{id,jdbcType=NUMERIC}
  </delete>
  <insert id="insert" parameterType="com.simi.po.model.order.OrderLog">
    insert into order_log (id, mobile, order_id,
      order_no, order_status, remarks,
      add_time)
    values (#{id,jdbcType=NUMERIC}, #{mobile,jdbcType=CHAR}, #{orderId,jdbcType=NUMERIC},
      #{orderNo,jdbcType=VARCHAR}, #{orderStatus,jdbcType=NUMERIC}, #{remarks,jdbcType=VARCHAR},
      #{addTime,jdbcType=NUMERIC})
  </insert>
  <insert id="insertSelective" parameterType="com.simi.po.model.order.OrderLog">
    insert into order_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="orderStatus != null">
        order_status,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="addTime != null">
        add_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=NUMERIC},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        #{orderId,jdbcType=NUMERIC},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        #{orderStatus,jdbcType=NUMERIC},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        #{addTime,jdbcType=NUMERIC},
      </if>
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.simi.po.model.order.OrderLog">
    update order_log
    <set>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=CHAR},
      </if>
      <if test="orderId != null">
        order_id = #{orderId,jdbcType=NUMERIC},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="orderStatus != null">
        order_status = #{orderStatus,jdbcType=NUMERIC},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="addTime != null">
        add_time = #{addTime,jdbcType=NUMERIC},
      </if>
    </set>
    where id = #{id,jdbcType=NUMERIC}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simi.po.model.order.OrderLog">
    update order_log
    set mobile = #{mobile,jdbcType=CHAR},
      order_id = #{orderId,jdbcType=NUMERIC},
      order_no = #{orderNo,jdbcType=VARCHAR},
      order_status = #{orderStatus,jdbcType=NUMERIC},
      remarks = #{remarks,jdbcType=VARCHAR},
      add_time = #{addTime,jdbcType=NUMERIC}
    where id = #{id,jdbcType=NUMERIC}
  </update>
</mapper>